name: validate
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Collect all K8s YAMLs into one file
      - name: Collect manifests
        run: |
          set -euo pipefail
          mkdir -p build
          tmp="$(mktemp)"
      
          # Concatenate all YAMLs EXCEPT anything in .git/ or build/
          # Add '---' between files to keep valid multi-doc YAML
          while IFS= read -r -d '' f; do
            cat "$f" >> "$tmp"
            printf '\n---\n' >> "$tmp"
          done < <(find . -type f \( -name '*.yaml' -o -name '*.yml' \) \
                    -not -path './.git/*' -not -path './build/*' -print0)
      
          # Fail if nothing was found
          if [ ! -s "$tmp" ]; then
            echo "No YAMLs found"
            exit 1
          fi
      
          mv "$tmp" build/manifests.yaml
          wc -l build/manifests.yaml


      # kubeconform: fast schema validation (supports CRDs)
      - name: Setup kubeconform
        uses: bmuschko/setup-kubeconform@v1
      - name: Run kubeconform
        run: |
          kubeconform -strict -ignore-missing-schemas \
            -summary -output json < build/manifests.yaml

      # Kubesec: risk analysis + upload to Security tab
      - name: Kubesec scan
        uses: controlplaneio/kubesec-action@43d0ddff5ffee89a6bb9f29b64cd865411137b14
        with:
          input: build/manifests.yaml
          format: template
          template: template/sarif.tpl
          output: kubesec-results.sarif
          exit-code: "0"

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: kubesec-results.sarif
