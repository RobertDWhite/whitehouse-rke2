name: validate
on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  security-events: write   # needed for upload-sarif

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install yq (for YAML processing)
      - name: Install yq
        run: |
          set -euo pipefail
          YQ_VERSION=v4.44.3
          curl -L "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version

      # Collect & sanitize manifests (skip SOPS-encrypted files)
      - name: Collect & sanitize manifests
        run: |
          set -euo pipefail
          mkdir -p build

          mapfile -d '' files < <(find . -type f \( -name '*.yaml' -o -name '*.yml' \) \
                                    -not -path './.git/*' -not -path './build/*' -print0)

          if [ ${#files[@]} -eq 0 ]; then
            echo "No YAMLs found"; exit 1
          fi

          yq ea '
            select(type == "!!map") |
            select(has("apiVersion") and has("kind")) |
            del(.sops) |
            select(.kind != "Secret") |

            # --- Coerce known numeric fields if they look like numbers ---
            (
              if .kind == "Deployment" and .spec.replicas then
                .spec.replicas |= ( (.|tostring) | (test("^[0-9]+$") then tonumber else . end) )
              else . end
            ) |

            (
              .spec.template.spec.containers[]? |= (
                if has("ports") then
                  .ports[]? |= (
                    if has("containerPort") then
                      .containerPort |= ( (.|tostring) | (test("^[0-9]+$") then tonumber else . end) )
                    else . end
                  )
                else . end
              )
            ) |

            (
              if .kind == "Service" and has("spec") and has(.spec.ports) then
                .spec.ports[] |= (
                  if has("port") then .port |= ( (.|tostring) | (test("^[0-9]+$") then tonumber else . end) ) else . end |
                  if has("targetPort") then
                    # only coerce numeric targetPorts; keep named ports as strings
                    .targetPort |= ( (.|tostring) | (test("^[0-9]+$") then tonumber else . end) )
                  else . end
                )
              else . end
            )
          ' "${files[@]}" > build/manifests.sanitized.yaml

          test -s build/manifests.sanitized.yaml || { echo "No Kubernetes manifests found after sanitation."; exit 1; }

          echo "Sanitized manifest line count:"; wc -l build/manifests.sanitized.yaml

          echo "Debug: replicas seen for homepage (post-sanitize):"
          yq ea -r 'select(.kind=="Deployment" and .metadata.name=="homepage") | "replicas=" + (.spec.replicas|tostring) + "  file=" + input_filename' build/manifests.sanitized.yaml


      # kubeconform: schema validation
      - name: Setup kubeconform
        uses: bmuschko/setup-kubeconform@v1

      - name: Run kubeconform
        run: |
          set -euo pipefail
          kubeconform \
            -strict \
            -ignore-missing-schemas \
            -summary \
            -output json \
            build/manifests.sanitized.yaml

      # Kubesec: risk analysis + SARIF
      - name: Kubesec scan
        uses: controlplaneio/kubesec-action@43d0ddff5ffee89a6bb9f29b64cd865411137b14
        with:
          input: build/manifests.sanitized.yaml
          format: template
          output: kubesec-results.sarif
          exit-code: "0"

      # Validate SARIF JSON before uploading (optional)
      - name: Validate SARIF JSON
        run: |
          command -v jq >/dev/null 2>&1 || (sudo apt-get update && sudo apt-get install -y jq)
          jq . kubesec-results.sarif >/dev/null

      # Upload SARIF (skip if forked PR, since token has no perms there)
      - name: Upload SARIF
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: kubesec-results.sarif


