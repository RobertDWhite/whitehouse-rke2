global:
  image:
    tag: v3.0.11

configs:
  cm:
    kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
    accounts.readonly: apiKey

  rbac:
    policy.csv: |
      g, readonly, role:readonly

repoServer:
  replicas: 4
  extraArgs:
    - --loglevel=debug
  env:
    - name: SOPS_AGE_KEY_FILE
      value: /etc/sops/age/key.txt
    - name: XDG_CONFIG_HOME
      value: /home/argocd/.config

  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: sops-age
      secret:
        secretName: sops-age

  initContainers:
    - name: install-ksops
      image: viaductoss/ksops:v4.3.3
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Installing KSOPS..."; \
          cp /usr/local/bin/ksops /custom-tools/; \
          cp /usr/local/bin/kustomize /custom-tools/; \
          echo "Done.";
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools

  volumeMounts:
    - mountPath: /usr/local/bin/kustomize
      name: custom-tools
      subPath: kustomize
    - mountPath: /usr/local/bin/ksops
      name: custom-tools
      subPath: ksops
    - mountPath: /etc/sops/age
      name: sops-age
      readOnly: true
    - mountPath: /home/argocd/.config/sops/age
      name: sops-age
      readOnly: true

server:
  replicas: 2
  extraArgs:
    - --loglevel=debug
  service:
    type: ClusterIP
    ports:
      - name: https
        port: 443
        targetPort: 8080

  resources:
    requests:
      cpu: 2
      memory: 2G
    limits:
      cpu: 4
      memory: 5G

  livenessProbe:
    httpGet:
      path: /healthz?full=true
      port: 8080
    initialDelaySeconds: 20
    timeoutSeconds: 5
    periodSeconds: 15
    failureThreshold: 10

  readinessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 20
    timeoutSeconds: 5
    periodSeconds: 15
    failureThreshold: 10

  certificate:
    enabled: true
    domain: argo.white.fm
    secretName: argocd-white-fm-tls
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: letsencrypt-dns


  extraVolumes:
    - name: argocd-tls
      secret:
        secretName: argocd-white-fm-tls

  extraVolumeMounts:
    - name: argocd-tls
      mountPath: /app/config/tls
      readOnly: true

applicationController:
  replicas: 3
