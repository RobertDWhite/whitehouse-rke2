# ---------------------------
# Authentik 2025.8.4 values
# ---------------------------

postgresql:
  enabled: true
  auth:
    existingSecret: authentik-env
    secretKeys:
      userKey: POSTGRES_USER
      passwordKey: password
      databaseKey: POSTGRES_DB
  primary:
    persistence:
      enabled: true
      size: 10Gi
      storageClass: longhorn
      annotations:
        argocd.argoproj.io/sync-options: Delete=false,Prune=false
        helm.sh/resource-policy: keep
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi

redis:
  enabled: true
  architecture: standalone
  auth:
    existingSecret: authentik-env
    existingSecretPasswordKey: redis-password
  master:
    persistence:
      enabled: true
      size: 2Gi
      storageClass: longhorn
      annotations:
        argocd.argoproj.io/sync-options: Delete=false,Prune=false
        helm.sh/resource-policy: keep
    resources:
      requests:
        cpu: 500m
        memory: 512Mi

# ---------------------------
# Authentik Server
# ---------------------------
server:
  envFrom:
    - secretRef:
        name: authentik-env
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-dns
    hosts:
      - auth.white.fm
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: auth-white-fm-tls
        hosts:
          - auth.white.fm
          - auth.whitematter.tech
          - auth.w3rdw.radio
  replicaCount: 2
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi

  persistence:
    enabled: true
    accessModes: [ReadWriteOnce]
    size: 5Gi
    storageClass: longhorn
    annotations:
      argocd.argoproj.io/sync-options: Delete=false,Prune=false
      helm.sh/resource-policy: keep

  service:
    type: ClusterIP
    port: 9000


# ---------------------------
# Authentik Worker
# ---------------------------
worker:
  envFrom:
    - secretRef:
        name: authentik-env
  replicaCount: 2
  resources:
    requests:
      cpu: 500m
      memory: 1Gi

# ---------------------------
# Global persistence
# ---------------------------
persistence:
  enabled: true
  accessModes: [ReadWriteOnce]
  size: 5Gi
  storageClass: longhorn
  annotations:
    argocd.argoproj.io/sync-options: Delete=false,Prune=false
    helm.sh/resource-policy: keep

# ---------------------------
# Security Contexts
# ---------------------------
podSecurityContext:
  fsGroup: 1000
securityContext:
  runAsUser: 1000
  runAsGroup: 1000