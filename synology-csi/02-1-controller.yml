apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-controller-sa
  namespace: synology-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: synology-csi-controller-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","list","watch","create","update","patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims","persistentvolumeclaims/status"]
    verbs: ["get","list","watch","update","patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get","list","watch","create","update","patch","delete"]
  - apiGroups: [""]
    resources: ["nodes","pods","secrets"]
    verbs: ["get","list","watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes","storageclasses","volumeattachments","volumeattachments/status"]
    verbs: ["get","list","watch","update","patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots","volumesnapshotcontents"]
    verbs: ["get","list","watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get","list","watch","create","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: synology-csi-controller-role
subjects:
  - kind: ServiceAccount
    name: csi-controller-sa
    namespace: synology-csi
roleRef:
  kind: ClusterRole
  name: synology-csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synology-csi-controller
  namespace: synology-csi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synology-csi-controller
  template:
    metadata:
      labels:
        app: synology-csi-controller
    spec:
      serviceAccountName: csi-controller-sa
      containers:
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.0.0
          args:
            - --csi-address=$(ADDRESS)
            - --v=5
            - --extra-create-metadata
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v3.3.0
          args:
            - --csi-address=$(ADDRESS)
            - --v=5
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.3.0
          args:
            - --csi-address=$(ADDRESS)
            - --v=5
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-plugin
          image: synology/synology-csi:v1.2.0
          args:
            - --nodeid=NotUsed
            - --endpoint=$(CSI_ENDPOINT)
            - --client-info
            - /etc/synology/client-info.yml
            - --log-level=info
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: client-info
              mountPath: /etc/synology
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: client-info
          secret:
            secretName: client-info-secret